@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager NavigationManager

<div class="top-row ps-3 navbar navbar-dark">
	<div class="container-fluid justify-content-center">
		<a class="navbar-brand" href="">
			<img src="logo.png" class="logo"/>
			<div>Coffee Browser</div>
		</a>
		<button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
			<span class="navbar-toggler-icon"></span>
		</button>
	</div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
	<nav class="flex-column">
		<div class="nav-item px-3">
			<NavLink class="nav-link" href="" Match="NavLinkMatch.All">
				<span class="oi oi-home" aria-hidden="true"></span> Home
			</NavLink>
		</div>
		<AuthorizeView>
			<Authorized>
				<div class="nav-item px-3">
					<NavLink class="nav-link" href="coffees">
						<span class="oi oi-list-rich" aria-hidden="true"></span> Coffees
					</NavLink>
				</div>
				<div class="nav-item px-3">
					<NavLink class="nav-link" @onclick="Logout" style="cursor:pointer">
						<span class="oi oi-account-logout" aria-hidden="true"></span> Logout
					</NavLink>
				</div>
			</Authorized>
			<NotAuthorized>
				<div class="nav-item px-3">
					<NavLink class="nav-link" @onclick="Login" style="cursor:pointer">
						<span class="oi oi-account-login" aria-hidden="true"></span> Login
					</NavLink>
				</div>
			</NotAuthorized>
		</AuthorizeView>
	</nav>
</div>

@code {
	private bool collapseNavMenu = true;

	private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

	private void ToggleNavMenu()
	{
		collapseNavMenu = !collapseNavMenu;
	}

	private async Task Login()
	{
		var authStateProvider = (CustomAuthStateProvider) AuthStateProvider;
		await authStateProvider.LogInAsync();
	}

	private void Logout()
	{
		var authStateProvider = (CustomAuthStateProvider)AuthStateProvider;
		authStateProvider.Logout();
		NavigationManager.NavigateTo("");
	}
}
